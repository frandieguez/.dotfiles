# Directory for storing ncmpcpp related files.
ncmpcpp_directory = ~/.config/ncmpcpp

# Connection settings
mpd_host = localhost
mpd_port = 6600
mpd_connection_timeout = 5

# Needed for tag editor and file operations to work.
mpd_music_dir = ~/Music

# Time of inactivity (in seconds) after playlist
# highlighting will be disabled (0 = always on).
playlist_disable_highlight_delay = 5

# Defines how long messages are supposed to be visible
message_delay_time = 5

display_volume_level = yes
volume_change_step = 5

# Available values: classic, alternative.
user_interface = classic

# Possible display modes: classic, columns
browser_display_mode = classic
discard_colors_if_item_is_selected = yes
playlist_display_mode = columns
playlist_editor_display_mode = columns
search_engine_display_mode = columns
titles_visibility = no

clock_display_seconds = no
mouse_support = no
allow_for_physical_item_deletion = no
show_hidden_files_in_local_browser = no

# You can specify third character which will
# be used to build 'empty' part of progressbar.
progressbar_look = "─╼─"

# Available values: database, playlist.
default_place_to_search_in = database

# Screens available for use: help, playlist, browser, search_engine,
# media_library, playlist_editor, tag_editor, outputs, visualizer, clock.
startup_screen = playlist
screen_switcher_mode = playlist, browser

##### song format #####
##
## For a song format you can use:
##
## %l - length
## %f - filename
## %D - directory
## %a - artist
## %A - album artist
## %t - title
## %b - album
## %y - date
## %n - track number (01/12 -> 01)
## %N - full track info (01/12 -> 01/12)
## %g - genre
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## %P - priority
## $R - begin right alignment
##
## If you want to make sure that a part of the format is displayed
## only when certain tags are present, you can archieve it by
## grouping them with brackets, e.g. '{%a - %t}' will be evaluated
## to 'ARTIST - TITLE' if both tags are present or '' otherwise.
## It is also possible to define a list of alternatives by providing
## several groups and separating them with '|', e.g. '{%t}|{%f}'
## will be evaluated to 'TITLE' or 'FILENAME' if the former is not
## present.
##
## Note: If you want to set limit on maximal length of a tag, just
## put the appropriate number between % and character that defines
## tag type, e.g. to make album take max. 20 terminal cells, use '%20b'.
##
## In addition, formats support markers used for text attributes.
## They are followed by character '$'. After that you can put:
##
## - 0 - default window color (discards all other colors)
## - 1 - black
## - 2 - red
## - 3 - green
## - 4 - yellow
## - 5 - blue
## - 6 - magenta
## - 7 - cyan
## - 8 - white
## - 9 - end of current color
## - b - bold text
## - u - underline text
## - r - reverse colors
## - a - use alternative character set
##
## If you don't want to use a non-color attribute anymore, just put it
## again, but this time insert character '/' between '$' and attribute
## character, e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag
## or filename with reversed colors.
##
## If you want to use 256 colors and/or background colors in formats
## (the naming scheme is described below in section about color
## definitions), it can be done with the syntax $(COLOR), e.g. to set
## the artist tag to one of the non-standard colors and make it have
## yellow background, you need to write $(197_yellow)%a$(end). Note
## that for standard colors this is interchangable with attributes
## listed above.
##
## Note: colors can be nested.
song_list_format = "$/r{$7%t $9}$R{$5%a$9} {$3|$9} {$8%b$9} {$3|$9} {$b$5%l$9$/b}"
song_status_format = "$b{$8%t$9} | {$3%a$9} $1|$9 {$7%b$9} {$1|$9} {$6%y$9} {$/b}"
#song_status_format = "{$3%a$9} - {$7%b$9} {$6(%y)$9} - {$8%t$9}"

alternative_header_first_line_format = "$8$aqqu$/a$b {%t}|{%f} $/b$8$atqq$/a$9"
alternative_header_second_line_format = "{{$8%a}{$8 - %b$9}{$8 (%y)$8}}|{%D$9}"
#song_library_format = {%n - }{%t}|{%f}
#now_playing_prefix = $b
#now_playing_suffix = $/b
browser_playlist_prefix = "$5[P]$9 "
#selected_item_prefix = $6
#selected_item_suffix = $9
#modified_item_prefix = $3> $9

##
## Note: attributes are not supported for the following variables.
##
#song_window_title_format = {%a - }{%t}|{%f}
##
## Note: Below variables are used for sorting songs in browser.
## The sort mode determines how songs are sorted, and can be used
## in combination with a sort format to specify a custom sorting format.
## Available values for browser_sort_mode are "name", "mtime", "format"
## and "noop".
##
#
#browser_sort_mode = name
#
#browser_sort_format = {%a - }{%t}|{%f} {(%l)}
#
##### columns settings #####
##
## syntax of song columns list format is "column column etc."
##
## - syntax for each column is:
##
## (width of the column)[color of the column]{displayed tag}
##
## Note: Width is by default in %, if you want a column to
## have fixed size, add 'f' after the value, e.g. (10)[white]{a}
## will be the column that take 10% of screen (so the real width
## will depend on actual screen size), whereas (10f)[white]{a}
## will take 10 terminal cells, no matter how wide the screen is.
##
## - color is optional (if you want the default one,
##   leave the field empty).
##
## Note: You can give a column additional attributes by putting appropriate
## character after displayed tag character. Available attributes are:
##
## - r - column will be right aligned
## - E - if tag is empty, empty tag marker won't be displayed
##
## You can also:
##
## - give a column custom name by putting it after attributes,
##   separated with character ':', e.g. {lr:Length} gives you
##   right aligned column of lengths named "Length".
##
## - define sequence of tags, that have to be displayed in case
##   predecessor is empty in a way similar to the one in classic
##   song format, i.e. using '|' character, e.g. {a|c|p:Owner}
##   creates column named "Owner" that tries to display artist
##   tag and then composer and performer if previous ones are
##   not available.
##
#
song_columns_list_format = "(20)[3]{a} (6f)[8]{NE:#} (50)[16]{t|f:Title} (20)[7]{b} (20)[14]{y:Year} (8f)[12]{l}"

##### colors definitions #####
##
## It is possible to set a background color by setting a color
## value "<foreground>_<background>", e.g. red_black will set
## foregound color to red and background color to black.
##
## In addition, for terminals that support 256 colors it
## is possible to set one of them by using a number in range
## [1, 256] instead of color name, e.g. numerical value
## corresponding to red_black is 2_1. To find out if the
## terminal supports 256 colors, run ncmpcpp and check out
## the bottom of the help screen for list of available colors
## and their numerical values.
##
## Note: due to technical limitations of ncurses, if 256 colors
## are used, it is possible to either use only the colors with
## default background color, or all pairs from 1_1 up to 254_127,
## depending on the ncurses version used.
##
colors_enabled = yes

window_border_color = 8
active_window_border = 8
alternative_ui_separator_color = 8
header_window_color = 12
main_window_color = 8
current_item_inactive_column_prefix = "$(7_1)"
current_item_inactive_column_suffix = "$9"
current_item_prefix = "$b$(7_1)"
current_item_suffix = "$9$/b"
empty_tag_color = 8
progressbar_color = 8
progressbar_elapsed_color = 12
state_flags_color = default
state_line_color = 8
statusbar_color = 8
volume_color = 8
